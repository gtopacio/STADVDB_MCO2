<!DOCTYPE html>
<html>
<head>
  <title>Index</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link rel="stylesheet" type="text/css" href="/css/style.css">
</head>
<body>
  <button class="tablink" onclick="openPage('singleTrans', this, '#3498db')" id="defaultOpen">Single Transaction</button>
  <button class="tablink" onclick="openPage('multiTrans', this, '#2ecc71')">Multiple Transactions</button>

  <textarea id="result" readonly>
  </textarea><br>

  <div id="singleTrans" class="tabcontent">
    <button class="ping">PING</button><br>
    <form id="formSingle" method="post" action="/query">
      <input type="submit" value="Submit">
      <div style="display:flex">
        <textarea id="querySingle" name="querySingle"></textarea><br>
        <select id="nodeSingle" name="nodeSingle">
          <option value="CENTRAL">Central</option>
          <option value="L1980">L1980</option>
          <option value="GE1980">GE1980</option>
        </select>
        <select id="isoLevelSingle" name="isoLevelSingle">
          <option value="READ UNCOMMITTED">Read Uncommitted</option>
          <option value="READ COMMITTED">Read Committed</option>
          <option value="REPEATABLE READ">Repeatable Read</option>
          <option value="SERIALIZABLE">Serializable</option>
        </select>
      </div>
    </form>
  </div>

  <div id="multiTrans" class="tabcontent">
    <button class="ping">PING</button>
    <button id="addTransaction">+</button>
    <button id="subTransaction">-</button>
    <form id="formMulti" method="post" action="/query">
      <input type="submit" value="Submit">
      <div id="transMulti0" style="display:flex">
        <textarea id="queryMulti0" name="queryMulti0"></textarea><br>
        <select id="nodeMulti0" name="nodeMulti0">
          <option value="CENTRAL">Central</option>
          <option value="L1980">L1980</option>
          <option value="GE1980">GE1980</option>
        </select>
        <select id="isoLevelMulti0" name="isoLevelMulti0">
          <option value="READ UNCOMMITTED">Read Uncommitted</option>
          <option value="READ COMMITTED">Read Committed</option>
          <option value="REPEATABLE READ">Repeatable Read</option>
          <option value="SERIALIZABLE">Serializable</option>
        </select>
      </div>
    </form>
  </div>

  <script>
    $(document).ready(async function () {
      let { data } = await axios.get("/urls");
      let urls = data;
      $("#formSingle").submit(async function(event) {
          event.preventDefault();
          let url = urls[$('#nodeSingle').val()];
          let isolationLevel = $('#isoLevelSingle').val();
          let queries = $('#querySingle').val().split(';');
          for (i = 0; i < queries.length; i++){
            queries[i] = queries[i].trim();
            if(queries[i] === "")
              queries = queries.splice(0,i).concat(queries.splice(i));
          }
          try{
            let { data } = await axios.post(url, {isolationLevel, queries});
            console.log(data);
            //alert(data);
            displayOutput(data);
          }
          catch(e){
            console.error(e);
            alert(e);
          }
      });

      $("#formMulti").submit(async function(event) {
          event.preventDefault();
          let requests = [];
          for (j = 0; j < cnt; j++) {
            let url = urls[$('#nodeMulti' + j).val()];
            let payload = {
                isolationLevel: $('#isoLevelMulti' + j).val()
            };
            let queries = $('#queryMulti' + j).val().split(';');
            for (i = 0; i < queries.length; i++){
              queries[i] = queries[i].trim();
              if(queries[i] === "")
                queries = queries.splice(0,i).concat(queries.splice(i));
            }
            payload.queries = queries;
            console.log(url, payload);
            requests.push(axios.post(url, payload));
          }

          let results = await Promise.all(requests);
          results = results.map(({data}) => data);
          console.log(results);
          //alert(results);
          displayOutput(results);
      });

      $(".ping").click(function(){
        $.get("/ping", function(data, status){
          alert(data);
        });
      });

      let cnt = 1;
      $("#addTransaction").click(function() {
        let newTrans = `<div id="transMulti${cnt}" style="display:flex">
                            <textarea id="queryMulti${cnt}" name="queryMulti${cnt}"></textarea>
                            <br>
                            <select id="nodeMulti${cnt}" name="nodeMulti${cnt}">
                              <option value="CENTRAL">Central</option>
                              <option value="L1980">L1980</option>
                              <option value="GE1980">GE1980</option>
                            </select>
                            <select id="isoLevelMulti${cnt}" name="isoLevelMulti${cnt}">
                              <option value="READ UNCOMMITTED">Read Uncommitted</option>
                              <option value="READ COMMITTED">Read Committed</option>
                              <option value="REPEATABLE READ">Repeatable Read</option>
                              <option value="SERIALIZABLE">Serializable</option>
                            </select>
                          </div>`;
        $('#multiTrans').append(newTrans);
        cnt++;
      });

      $("#subTransaction").click(function() {
        $("#transMulti" + (cnt - 1)).remove();
        cnt--;
      });

    });

    function displayOutput(result) {
      let output = JSON.stringify(result, null, 2);
      $("#result").val(output);
    }

    function openPage(pageName, elmnt, color) {
      // Hide all elements with class="tabcontent" by default */
      var i, tabcontent, tablinks;
      tabcontent = document.getElementsByClassName("tabcontent");
      for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
      }

      // Remove the background color of all tablinks/buttons
      tablinks = document.getElementsByClassName("tablink");
      for (i = 0; i < tablinks.length; i++) {
        tablinks[i].style.backgroundColor = "";
      }

      // Show the specific tab content
      document.getElementById(pageName).style.display = "block";

      // Add the specific color to the button used to open the tab content
      elmnt.style.backgroundColor = color;
    }

    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();
  </script>
</body>

</html>
